#pragma once

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

struct PUWidget;
struct PUPushButton;

#define PU_INTERNAL_WIDGET_TYPE(type) \
typedef struct type { \
	PUWidget* base; \
} type

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PUObjectFuncs {
	int (*connect)(void* sender, const char* id, void* reciver, void* func);
} PUObjectFuncs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PUWidgetFuncs {
	void (*set_size)(struct PUWidget* widget, int width, int height);
	void (*show)(struct PUWidget* widget);
} PUWidgetFuncs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PUPushButtonFuncs {
	void (*set_title)(struct PUPushButton* button, const char* text);
} PUPushButtonFuncs;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PUObject {
	void* p;
	PUObjectFuncs* object_funcs;
} PUObject;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PUWidget {
	PUObject* object;
} PUWidget;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

PU_INTERNAL_WIDGET_TYPE(PUPushButton);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct PU {
	uint64_t api_version;

	PUPushButton* (*push_button_create)();

	PUWidgetFuncs* widget_funcs;
	PUPushButtonFuncs* push_button_funcs;

} PU;

#define PU_VERSION(major, minor, sub) ((((uint64_t)major) << 32) | (minor << 16) | (sub))

#ifdef __cplusplus
}
#endif

